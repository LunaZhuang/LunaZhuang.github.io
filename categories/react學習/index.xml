<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React學習 on Luna&#39;s Blog</title>
    <link>https://LunaZhuang.github.io/categories/react%E5%AD%B8%E7%BF%92/</link>
    <description>Recent content in React學習 on Luna&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 10 Sep 2022 23:00:00 +0800</lastBuildDate><atom:link href="https://LunaZhuang.github.io/categories/react%E5%AD%B8%E7%BF%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React-在開始使用React要了解的事之二「函式導向程式設計」</title>
      <link>https://LunaZhuang.github.io/blog/react-functionalprogramming/</link>
      <pubDate>Sat, 10 Sep 2022 23:00:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/react-functionalprogramming/</guid>
      <description>函式導向程式設計 函式導向程式設計與 JavaScript。 學習 React 不可避免地要接觸所謂的函式導向程式設計，畢竟函式編程只是一種程式設計方法，只要程式語言本身可以符合函式編程的基本概念，就可以宣稱用函式編程來開發程式。今天學習的是何謂函式導向。
何謂函式導向： JavaScript 雖然是物件導向，但也支援函式導向程式設計，因為函式在 JavaScript 中是「一級成員」，這就意味著函式具有變數的特質。在近年 JavaScript 完善了對函式導向的支援，包括了箭頭函式、Promise 物件及延展運算子。</description>
    </item>
    
    <item>
      <title>React- 在開始使用React要了解的事之一「模組」</title>
      <link>https://LunaZhuang.github.io/blog/react-module/</link>
      <pubDate>Fri, 09 Sep 2022 21:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/react-module/</guid>
      <description>使用 React 前須知道，何謂模組 在 React 裡很強調模組化，把功能細分成一個個模組，再把它們匯入至上層模組組合起來，所以不同模組間也不容易出現衝突，當其中一個模組出錯也不影響到其他模組。
模組意思：
模組是一段可重複使用的程式碼，他可以輕鬆地被整合進既有的程式，而不產生變數的命名衝突，JavaScript 的模組會被整合成獨立的檔案，ES6 的模組系統使用上相當簡單，各模組有自己的獨立的作用域，所以你必須指示要在應用程式中匯入或輸出哪一些模組。</description>
    </item>
    
  </channel>
</rss>
