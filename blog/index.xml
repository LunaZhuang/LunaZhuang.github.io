<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Luna&#39;s Blog</title>
    <link>https://LunaZhuang.github.io/blog/</link>
    <description>Recent content in blog on Luna&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 29 Oct 2019 13:49:23 +0600</lastBuildDate><atom:link href="https://LunaZhuang.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript-非同步(Asynchronous)與同步(Synchronous)的差異</title>
      <link>https://LunaZhuang.github.io/blog/js-asynchronous/</link>
      <pubDate>Sun, 04 Sep 2022 21:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-asynchronous/</guid>
      <description>非同步 在了解非同步之前先大概知道所謂的同步 JavaScript 是什麼，當跑一段程式碼，瀏覽器會將執行結果盡快的回傳出來 即為同步。舉例如下：
const header = document.getElementById(&amp;#34;heading&amp;#34;); heading.innerHTML = &amp;#34;Hey!</description>
    </item>
    
    <item>
      <title>QueryString（查詢字串）</title>
      <link>https://LunaZhuang.github.io/blog/querystring/</link>
      <pubDate>Thu, 01 Sep 2022 09:16:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/querystring/</guid>
      <description>QueryString（查詢字串）是什麼？ Querystring（查詢字串）是附加在網頁 URL 結尾的資訊。主要是在 Url 上傳遞資料，可能是一個搜尋字串、頁碼、某項特定的指標等等的東西。
在網址結尾加上一個問號（？）開始，每一組參數都是用「＆」區隔開來，用等於(=)將名稱(KEY )與值 (Value)組合在一起。
以下方的圖為例，在 Google 首頁搜尋引擎輸入欲查詢的文字，在按下搜尋按鈕，會導頁到查詢結果頁面，並將符合搜尋字串相關資料呈現出來。</description>
    </item>
    
    <item>
      <title>SQL語法(下）</title>
      <link>https://LunaZhuang.github.io/blog/sqltwo/</link>
      <pubDate>Thu, 25 Aug 2022 23:16:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/sqltwo/</guid>
      <description>接續上篇 SQL 語法(上）
更新的語法 更改其中一筆資料的內容，一定要設條件不然所以資料都會被修改：
UPDATE heroes SET age=10 WHERE id=25; 也可以多筆項目更新，一定要設條件除非要更新全部資料：</description>
    </item>
    
    <item>
      <title>SQL語法(上）</title>
      <link>https://LunaZhuang.github.io/blog/sqlone/</link>
      <pubDate>Tue, 23 Aug 2022 17:09:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/sqlone/</guid>
      <description>什麼是 SQL 語法？ 用來操作資料庫的語法，不管你是在 Web 應用程式的開發或是資料分析（Data Analytics）都有可能用得上。
關聯式資料庫 RDBMS 每個資料表間可以有關聯性。市面上常見的資料庫種類有：</description>
    </item>
    
    <item>
      <title>JavaScript-延展運算子</title>
      <link>https://LunaZhuang.github.io/blog/js-spreadopeartor/</link>
      <pubDate>Sun, 21 Aug 2022 10:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-spreadopeartor/</guid>
      <description>延展運算子 延展運算子由三個點(&amp;hellip;)組成，具備多種功能。
首先延展運算子的其中一個功能，可以協助我們結合兩個陣列，產生一個新陣列，跟 JavaScript 的陣列方法 concat 一樣。 用延展運算子：
const flowers = [&amp;#34;Lily&amp;#34;, &amp;#34;Rose&amp;#34;, &amp;#34;Sunflower&amp;#34;]; const plant = [&amp;#34;cactus&amp;#34;, &amp;#34;Snake Plant&amp;#34;]; const decorate = [.</description>
    </item>
    
    <item>
      <title>JavaScript-物件語法強化</title>
      <link>https://LunaZhuang.github.io/blog/js-objectliteralenhancement/</link>
      <pubDate>Sat, 20 Aug 2022 11:50:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-objectliteralenhancement/</guid>
      <description>物件語法強化 可以將變數重組為物件
下列程式碼 Lilium 物件內的變數與上面變數有相同的名稱，所以會將相同變數名稱的值帶進物件裡。
const name = &amp;#34;Robert&amp;#34;; const height = 272; const person = { name, height }; console.</description>
    </item>
    
    <item>
      <title>JavaScript-解構賦值</title>
      <link>https://LunaZhuang.github.io/blog/js-destructuring-assignment/</link>
      <pubDate>Wed, 17 Aug 2022 22:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-destructuring-assignment/</guid>
      <description>解構賦值是什麼？ 解構賦值 (Destructuring assignment) 語法是一種 JavaScript 運算式，用以拆解物件與陣列中的資料成為獨立變數。
使用方式 陣列解構 用新的陣列變數[White, Red, Yellow] 將 flowers 陣列裡的值分別指派給 White、Red、Yellow 變數，此時 White = Lily, Red = Rose, Yellow = Sunflower。</description>
    </item>
    
    <item>
      <title>Ruby on Rails - 造成ActiveRecord::RecordNotFound 的原因</title>
      <link>https://LunaZhuang.github.io/blog/rails-find/</link>
      <pubDate>Tue, 16 Aug 2022 11:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-find/</guid>
      <description>差異 find find 只能接數字，可以接特定數字 id (1)或 id 列表 (1, 5, 6) 以及 id 數組 ([5, 6, 10])，出現錯誤時會噴出 ActiveRecord::RecordNotFound 的錯誤。</description>
    </item>
    
    <item>
      <title>安裝Tailwindcss</title>
      <link>https://LunaZhuang.github.io/blog/tailwind/</link>
      <pubDate>Sat, 13 Aug 2022 13:20:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/tailwind/</guid>
      <description>本機 Ruby 以及 Rails 版本 Ruby 3.1.2 Rails 6.1.6.1 安裝步驟 將要安裝的 Rails 資料夾打開並開啟終端機 輸入yarn add -D tailwindcss postcss autoprefixer，安裝好後終端機會顯示已 加進資料夾裡，如附圖：</description>
    </item>
    
    <item>
      <title>Ruby on Rails - Strong Parameters</title>
      <link>https://LunaZhuang.github.io/blog/rails-strong-parameters/</link>
      <pubDate>Tue, 09 Aug 2022 14:50:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-strong-parameters/</guid>
      <description>什麼是 Strong Parameters？ 因為 Rails 裡有個功能叫 Mass assignemet 這個功能的主用用途是可以跟 Rails form_with 方法產生的表單做配套，在新增或修改時，可以直接傳入一個 Hash 來設定屬性，所以我們可以直接將網頁表單上的參數直接丟進 params，裡面有很多我表單上的資料，這樣我就不需要一個一個送資料而是一次搞定，但因為表單是 HTML 的表單，如果有惡意使用者，就可以自己新增欄位來攥改表單，因此有了 Strong Parameters。</description>
    </item>
    
    <item>
      <title>Ruby on Rails - Request Forgery Protection</title>
      <link>https://LunaZhuang.github.io/blog/rails-authenticitytoken/</link>
      <pubDate>Sun, 07 Aug 2022 16:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-authenticitytoken/</guid>
      <description>什麼是 Request Forgery Protection？ 跨站點請求偽造是一種攻擊類型，其中只要有心人士看網站的原始碼，就可以知道將表單資料往哪邊送，若他寫了小程式，就可能在你不知情或未經許可的情況下添加、修改或刪除網站上的數據。
如果是用 POST 進來 Rails 會檢查你有沒有 AuthenticityToken，有的話 Rails 會先比對你送進來的 AuthenticityToken 是不是我網站發出的，是一樣的才可以送資料進來，而且每次刷新的 AuthenticityToken 都會不一樣，不是我網站發出的跟沒有 AuthenticityToken 就當作是無效是別的站位打過來的。</description>
    </item>
    
    <item>
      <title>Ruby on Rails - MVC架構</title>
      <link>https://LunaZhuang.github.io/blog/rails-mvc/</link>
      <pubDate>Sat, 06 Aug 2022 16:20:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-mvc/</guid>
      <description>什麼是 MVC 架構？ 是軟體工程中的一種軟體架構模式，是希望能把應用程式的內部運作歸納成不同的部門，讓每個部門各自負責不同的關注點，把不同意義的程式碼放在不同的檔案裡，Rails 就是採用 Model(模型)、View(視圖）、Controller（控制器）（簡稱 MVC）的方式設計的。
這麼做的好處？ 分工容易 整個專案拆解成 MVC 結構之後，雖然檔案變多、變分散了，但也因此更容易進行分工，當團隊人數增加，每個人可以在各自負責的部份進行開發，較不易互相衝突、干擾。 方便管理 整個 Rails 專案都是遵循 MVC 的慣例結構，所以即使是不同程度的開發者寫出來的 Rails 專案，Controller、Model、View 大多都會放在相同位置的目錄裡，不會有太大的差別。 用圖來解釋 首先當使用者進入網站後，會根據想查到的資訊尋找相對的路徑，就像你去戶政事務所，門口有個阿桑會問你你要辦什麼業務。</description>
    </item>
    
    <item>
      <title>JavaScript-立即呼叫(IIFE)</title>
      <link>https://LunaZhuang.github.io/blog/js-iife/</link>
      <pubDate>Sun, 31 Jul 2022 15:40:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-iife/</guid>
      <description>什麼是 IIFE? 是一個定義完馬上就執行的 JavaScript function
有什麼功能 不需要呼叫此函式，也能在函式建立後立即執行。 可以減少「全域變數」的產生，同時也避免了變數名稱衝突的機會 一般函示需要呼叫才會執行
function getNumber() { var value = 2; return value; } console.</description>
    </item>
    
    <item>
      <title>JavaScript-閉包(Closures)</title>
      <link>https://LunaZhuang.github.io/blog/js-closures/</link>
      <pubDate>Sat, 30 Jul 2022 12:40:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-closures/</guid>
      <description>什麼是閉包？ 閉包是一種資料結構，包含函式以及該函式被宣告時所建立的環境組合，因此當函式是在其宣告的語彙範疇之外執行時也能正常運作。
在說閉包以前先來複習範圍練
function outside() { let a = 1; function inside() { console.</description>
    </item>
    
    <item>
      <title>JavaScript-正規表達式(RegExp)</title>
      <link>https://LunaZhuang.github.io/blog/js-regexp/</link>
      <pubDate>Sun, 24 Jul 2022 21:15:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-regexp/</guid>
      <description>什麼是正規表達式(RegExp)? 是電腦科學的一個概念。正規表示式使用單個字串來描述、符合一系列符合某個句法規則的字串。在很多文字編輯器裡，正規表達式通常被用來檢索、替換那些符合某個模式的文字。
正則表達式中的特殊字符 常用 MDN 詳細介紹
範例 我在左下的身份字號中要找出哪些有符合規定，當我要搜尋字串時要/ / 開頭，上方/[A-Z][12]\d{8}/是我下的規範，其中的[A-Z]代表我第一個字符設定在大寫Ａ到Ｚ，[12]我第二個字符設定在數字 1 與 2 判定男女，\d{8}我餘下的字符都是數字並有 8 個數字。</description>
    </item>
    
    <item>
      <title>TDD(測試驅動開發)</title>
      <link>https://LunaZhuang.github.io/blog/tdd/</link>
      <pubDate>Sun, 24 Jul 2022 20:40:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/tdd/</guid>
      <description>什麼是 TDD? 是一種開發流程，觀念是「先寫測試，在進入開發工作」。在進行開發工作以前，編寫測試，預先模擬欲測試的情境。
為什麼要寫 TDD? 預防發生錯誤能馬上知道在哪?
1.測試本身就是規格
2.寫出更有信心的程式碼
3.可以做出比較好的設計
4.將來有重構的可能性</description>
    </item>
    
    <item>
      <title>JavaScript-this代名詞</title>
      <link>https://LunaZhuang.github.io/blog/js-this/</link>
      <pubDate>Sun, 17 Jul 2022 20:00:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-this/</guid>
      <description>什麼是 this? this 是全域物件，在瀏覽器叫 window，在 node 叫 global。
this 說明 誰呼叫，誰就是 this ， 沒有明確呼叫者 this 就是 window 在 JavaScript 裡 this 寫在哪沒有關係，跟怎麼執行有關。</description>
    </item>
    
    <item>
      <title>JavaScript-Event Loop</title>
      <link>https://LunaZhuang.github.io/blog/js-eventloop/</link>
      <pubDate>Sun, 17 Jul 2022 17:43:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-eventloop/</guid>
      <description>什麼是呼叫堆疊(Call Stack) 程式執行的過程是先進後出(FILO)以下圖為說明：
何謂 Event Loop 有些 function 是需要等待的，JavaScript 會用非同步來處理，其實這些 function 已完成只是先丟到 web api，等到時間到了再丟到 queue 排隊，如果堆疊區有 function 要處理，要等堆疊區無事，queue 裡排隊的 function 才會被丟出來。</description>
    </item>
    
    <item>
      <title>JavaScript-物件(Object)與物件導向</title>
      <link>https://LunaZhuang.github.io/blog/js-object/</link>
      <pubDate>Sun, 17 Jul 2022 16:20:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-object/</guid>
      <description>物件 什麼是物件？ 物件 object = 一個東西＝屬性＋行為
建立與使用物件 let hero = { //key = power,age //value = 100,20 power: 100, age: 20, attack: function () { console.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-模組(Module)</title>
      <link>https://LunaZhuang.github.io/blog/ruby-module/</link>
      <pubDate>Sun, 10 Jul 2022 01:50:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-module/</guid>
      <description>為什麼要用模組 class 繼承 class 的方法不就好了？為什麼還要有模組？ 因為你只是想要類別裡的其中一個方法，但為了這方法就要繼承這個類別裡的所有方法，這有點過本末倒置。
定義與使用模組 模組的命名規定必須是常數常數必須要是大寫英文字母開頭
include:作用在實體方法
module Flyable #定義 def fly puts &amp;#34;fly&amp;#34; end end class Cat include Flyable #引進 end kitty = Cat.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-物件導向程式設計(OOP)</title>
      <link>https://LunaZhuang.github.io/blog/ruby-obj/</link>
      <pubDate>Sat, 09 Jul 2022 21:40:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-obj/</guid>
      <description>為什麼要有物件？ 物件 = 狀態(名詞) + 行為(動詞)
透過物件導向程式設計，讓程式碼變得容易被理解與使用
物件-類別與實體 類別就像是一個模型，透過這個模型可以製造出許多實體以下方程式碼為例
定義類別： class Lily def eat puts &amp;#34; 好吃！&amp;#34; end end 產生實體： luna = Lily.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-區塊(Block)</title>
      <link>https://LunaZhuang.github.io/blog/ruby-block/</link>
      <pubDate>Wed, 06 Jul 2022 16:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-block/</guid>
      <description>Block 是什麼？ 是一段不會被主動執行的程式碼，無法單獨存活
5.times do |x| puts i end 5.times { |x| puts i } 從上述例子中的do.</description>
    </item>
    
    <item>
      <title>JavaScript-陣列(Array)</title>
      <link>https://LunaZhuang.github.io/blog/js-array/</link>
      <pubDate>Sun, 03 Jul 2022 20:08:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-array/</guid>
      <description>為什麼需要有陣列資料型態？ 因為一次只傳一個字串或數字太沒有效率，弄個集合包裝把所有資料放到裡面在一次傳過去。
在 JavaScript 可以放不同種類的資料型態，但其他語言程式不一定。
建立陣列使用陣列 const list = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;,&amp;#34;c&amp;#34;, 1, 2, 3]; console.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-方法(method)</title>
      <link>https://LunaZhuang.github.io/blog/ruby-method/</link>
      <pubDate>Sat, 02 Jul 2022 21:40:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-method/</guid>
      <description>為什麼需要方法？ 可以重複使用。 可以讓程式碼變得更容易理解。 如何定義及使用 定義： def method_name(param1, param2) #參數一個或2個都可以，但有多少參數就要有多少引數 #內容 end 使用： method_name(param) #把方法呼叫出來 可以預設參數: def hello (someone = &amp;#34;luna&amp;#34;) puts &amp;#34;hi,#{someone} welcome my blog&amp;#34; end hello() #如果沒有放入引數，他會出現hi,luna welcome my blog #如果有放入引數hello(&amp;#34;lily&amp;#34;)，會出現hi,lily welcome my blog 所謂的回傳值 回傳 = 交回控制權</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-陣列&amp;範圍（Array＆Range）</title>
      <link>https://LunaZhuang.github.io/blog/ruby-arrayrange/</link>
      <pubDate>Wed, 29 Jun 2022 23:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-arrayrange/</guid>
      <description>為什麼需要有陣列資料型態？ 因為一次只傳一個字串或數字太沒有效率，弄個集合包裝把所有資料放到裡面在一次傳過去。
建立陣列 #使用Array類別 a = Array.new #使用中括號 b = [] #一樣可以建立陣列，但要小心裡面的東西會變成字串 list = %w(ruby php python) 使用陣列 陣列索引值都是從 0 開始計算，從後面就是由-1 開始。 list = [&amp;#34;ruby&amp;#34;,&amp;#34;php&amp;#34;,&amp;#34;python&amp;#34;,&amp;#34;c&amp;#34;,&amp;#34;java&amp;#34;,&amp;#34;JavaScript&amp;#34;] puts list[0] #印出 ruby puts list[1] #印出 php puts list[-1] #印出 JavaScript puts list[-2] #印出 java #ruby方法 puts list.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-迴圈與迭代（Loop&amp;Iteration）</title>
      <link>https://LunaZhuang.github.io/blog/ruby-loop/</link>
      <pubDate>Tue, 28 Jun 2022 22:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-loop/</guid>
      <description>為什麼要設迴圈？ 因為重複的代碼可以不用一直寫，只要寫好一個迴圈就可以設定他跑十次，最後的結果是一樣的，但可以少寫很多 code。
迴圈種類 for 迴圈 while 迴圈 loop 迴圈 method 迴圈-Ruby 特有 迭代式迴圈 迴圈與迭代有什麼不同？ 迴圈：不斷的依據指定的條件重複執行某些指令。 迭代：通常會有個對象，針對某個集合的每個元素做某些事。 迴圈寫法 for 迴圈 names = [&amp;#34;eddie&amp;#34;,&amp;#34;joanne&amp;#34;,&amp;#34;john&amp;#34;,&amp;#34;sherly&amp;#34;] for name in names puts name end #設一個變數name一圈一個把names裡面的東西印出來。 for i in 1.</description>
    </item>
    
    <item>
      <title>JavaScript-變數與常數</title>
      <link>https://LunaZhuang.github.io/blog/js-variableconstant/</link>
      <pubDate>Sat, 25 Jun 2022 16:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-variableconstant/</guid>
      <description>為什麼程式語言都需要變數？ 變數只是個名字，只是為了要識別，讓你程式語言在計算的時候，有個放計算資料內容的容器，當你在執行的時候就可以，依照你給他的容器名稱，把他叫出來使用，變數本身沒意義。
指定又是什麼？ 在程式語言中=(x 等號)而是指定，由右側的值指定給左側的變數名稱。==則是比較兩邊的值。 但在 JavaScript 中==雖然也是比較的意思，不過 JavaScript 會有自動轉型的問題，為了不要讓你的程式碼出現奇怪的內容，建議使用更為嚴謹的===。</description>
    </item>
    
    <item>
      <title>HTML(超文本標記語言) </title>
      <link>https://LunaZhuang.github.io/blog/html/</link>
      <pubDate>Wed, 22 Jun 2022 23:48:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/html/</guid>
      <description>關於網頁的組成 在網頁開發中最基本有三大元素：HTML、CSS、JavaScript。HTML 就是先將資料結構化，並給於資料標記分類。寫網頁中最主要的就是網頁內容，網頁內容就是我們要呈現的資料，網頁製作是將這些資料使用正確的 HTML 語法將資料標記起來。
在 HTML 上標記標籤的方式是使用 &amp;lt;起始標籤&amp;gt;內容&amp;lt;/結束標籤&amp;gt; 的方式標記。 &amp;lt;&amp;gt; 這是標籤，裡面會有 &amp;lt;元素&amp;gt;，元素是告訴瀏覽器我這個標籤裡是什麼種類的資料，像是下圖我用 &amp;lt; p &amp;gt; 告訴他這是一段文字內容，網頁上就會呈現出來。</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-邏輯判斷</title>
      <link>https://LunaZhuang.github.io/blog/ruby-logic/</link>
      <pubDate>Wed, 22 Jun 2022 22:40:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-logic/</guid>
      <description>1.等號判斷 a =10 b = &amp;#34;10&amp;#34; p a == b #false p a === b #false 一個等號是指代的意思，二個等號與三個等號都是比較的意思。</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-字串＆數字（String&amp;Number）</title>
      <link>https://LunaZhuang.github.io/blog/ruby-stringandnumber/</link>
      <pubDate>Tue, 21 Jun 2022 21:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-stringandnumber/</guid>
      <description>1.字串的串接 2.字串引號種類 名稱 引號 範例 雙引號 &amp;quot; &amp;quot; puts &amp;ldquo;Hi&amp;rdquo; 單引號 &amp;rsquo; &#39; puts &amp;lsquo;Hi&amp;rsquo; 跳脫字元 &amp;rsquo; \ &#39; puts &amp;lsquo;Hi, I&#39;m Luna&amp;rsquo; 效果等於雙引號 %Q puts %Q(Hi) 效果等於單引號 %q puts %q(Hi) 3.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-變數＆常數（Variable）</title>
      <link>https://LunaZhuang.github.io/blog/ruby-variable/</link>
      <pubDate>Wed, 15 Jun 2022 07:04:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-variable/</guid>
      <description>1.Ruby 變數種類 2.變數指定 a = a + 2 一個等號是指定 也可以寫成這樣 3.</description>
    </item>
    
    <item>
      <title>Ruby 學習筆記-符號（Symbol）</title>
      <link>https://LunaZhuang.github.io/blog/ruby-symbol/</link>
      <pubDate>Fri, 10 Jun 2022 01:04:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/ruby-symbol/</guid>
      <description>Ruby 裡的符號＝有名字的物件（值） 與數字１,2,3 一樣都是有固定的值並不能改變
１就是１，２就是２
符號 ：name ，就是：name 不是變數不可以改變他的值
字串 name=&amp;quot;amber&amp;quot;，name 變數指向一個字串，並可以改變字串內容</description>
    </item>
    
  </channel>
</rss>
