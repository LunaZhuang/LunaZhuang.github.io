<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Rails on Luna&#39;s Blog</title>
    <link>https://LunaZhuang.github.io/tags/ruby-on-rails/</link>
    <description>Recent content in Ruby on Rails on Luna&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 16 Aug 2022 11:30:00 +0800</lastBuildDate><atom:link href="https://LunaZhuang.github.io/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ruby on Rails - 造成ActiveRecord::RecordNotFound 的原因</title>
      <link>https://LunaZhuang.github.io/blog/rails-find/</link>
      <pubDate>Tue, 16 Aug 2022 11:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-find/</guid>
      <description>差異 find find 只能接數字，可以接特定數字 id (1)或 id 列表 (1, 5, 6) 以及 id 數組 ([5, 6, 10])，出現錯誤時會噴出 ActiveRecord::RecordNotFound 的錯誤。</description>
    </item>
    
    <item>
      <title>Ruby on Rails - Strong Parameters</title>
      <link>https://LunaZhuang.github.io/blog/rails-strong-parameters/</link>
      <pubDate>Tue, 09 Aug 2022 14:50:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-strong-parameters/</guid>
      <description>什麼是 Strong Parameters？ 因為 Rails 裡有個功能叫 Mass assignemet 這個功能的主用用途是可以跟 Rails form_with 方法產生的表單做配套，在新增或修改時，可以直接傳入一個 Hash 來設定屬性，所以我們可以直接將網頁表單上的參數直接丟進 params，裡面有很多我表單上的資料，這樣我就不需要一個一個送資料而是一次搞定，但因為表單是 HTML 的表單，如果有惡意使用者，就可以自己新增欄位來攥改表單，因此有了 Strong Parameters。</description>
    </item>
    
    <item>
      <title>Ruby on Rails - Request Forgery Protection</title>
      <link>https://LunaZhuang.github.io/blog/rails-authenticitytoken/</link>
      <pubDate>Sun, 07 Aug 2022 16:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-authenticitytoken/</guid>
      <description>什麼是 Request Forgery Protection？ 跨站點請求偽造是一種攻擊類型，其中只要有心人士看網站的原始碼，就可以知道將表單資料往哪邊送，若他寫了小程式，就可能在你不知情或未經許可的情況下添加、修改或刪除網站上的數據。
如果是用 POST 進來 Rails 會檢查你有沒有 AuthenticityToken，有的話 Rails 會先比對你送進來的 AuthenticityToken 是不是我網站發出的，是一樣的才可以送資料進來，而且每次刷新的 AuthenticityToken 都會不一樣，不是我網站發出的跟沒有 AuthenticityToken 就當作是無效是別的站位打過來的。</description>
    </item>
    
    <item>
      <title>Ruby on Rails - MVC架構</title>
      <link>https://LunaZhuang.github.io/blog/rails-mvc/</link>
      <pubDate>Sat, 06 Aug 2022 16:20:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/rails-mvc/</guid>
      <description>什麼是 MVC 架構？ 是軟體工程中的一種軟體架構模式，是希望能把應用程式的內部運作歸納成不同的部門，讓每個部門各自負責不同的關注點，把不同意義的程式碼放在不同的檔案裡，Rails 就是採用 Model(模型)、View(視圖）、Controller（控制器）（簡稱 MVC）的方式設計的。
這麼做的好處？ 分工容易 整個專案拆解成 MVC 結構之後，雖然檔案變多、變分散了，但也因此更容易進行分工，當團隊人數增加，每個人可以在各自負責的部份進行開發，較不易互相衝突、干擾。 方便管理 整個 Rails 專案都是遵循 MVC 的慣例結構，所以即使是不同程度的開發者寫出來的 Rails 專案，Controller、Model、View 大多都會放在相同位置的目錄裡，不會有太大的差別。 用圖來解釋 首先當使用者進入網站後，會根據想查到的資訊尋找相對的路徑，就像你去戶政事務所，門口有個阿桑會問你你要辦什麼業務。</description>
    </item>
    
  </channel>
</rss>
