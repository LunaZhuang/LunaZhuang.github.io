<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Luna&#39;s Blog</title>
    <link>https://LunaZhuang.github.io/tags/javascript/</link>
    <description>Recent content in JavaScript on Luna&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 17 Jul 2022 20:00:00 +0800</lastBuildDate><atom:link href="https://LunaZhuang.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript-this代名詞</title>
      <link>https://LunaZhuang.github.io/blog/js-this/</link>
      <pubDate>Sun, 17 Jul 2022 20:00:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-this/</guid>
      <description>什麼是 this? this 是全域物件，在瀏覽器叫 window，在 node 叫 global。
this 說明 誰呼叫，誰就是 this ， 沒有明確呼叫者 this 就是 window 在 JavaScript 裡 this 寫在哪沒有關係，跟怎麼執行有關。</description>
    </item>
    
    <item>
      <title>JavaScript-Event Loop</title>
      <link>https://LunaZhuang.github.io/blog/js-eventloop/</link>
      <pubDate>Sun, 17 Jul 2022 17:43:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-eventloop/</guid>
      <description>什麼是呼叫堆疊(Call Stack) 程式執行的過程是先進後出(FILO)以下圖為說明：
何謂 Event Loop 有些 function 是需要等待的，JavaScript 會用非同步來處理，其實這些 function 已完成只是先丟到 web api，等到時間到了再丟到 queue 排隊，如果堆疊區有 function 要處理，要等堆疊區無事，queue 裡排隊的 function 才會被丟出來。</description>
    </item>
    
    <item>
      <title>JavaScript-物件(Object)與物件導向</title>
      <link>https://LunaZhuang.github.io/blog/js-object/</link>
      <pubDate>Sun, 17 Jul 2022 16:20:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-object/</guid>
      <description>物件 什麼是物件？ 物件 object = 一個東西＝屬性＋行為
建立與使用物件 let hero = { //key = power,age //value = 100,20 power: 100, age: 20, attack: function () { console.</description>
    </item>
    
    <item>
      <title>JavaScript-陣列(Array)</title>
      <link>https://LunaZhuang.github.io/blog/js-array/</link>
      <pubDate>Sun, 03 Jul 2022 20:08:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-array/</guid>
      <description>為什麼需要有陣列資料型態？ 因為一次只傳一個字串或數字太沒有效率，弄個集合包裝把所有資料放到裡面在一次傳過去。
在 JavaScript 可以放不同種類的資料型態，但其他語言程式不一定。
建立陣列使用陣列 const list = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;,&amp;#34;c&amp;#34;, 1, 2, 3]; console.</description>
    </item>
    
    <item>
      <title>JavaScript-變數與常數</title>
      <link>https://LunaZhuang.github.io/blog/js-variableconstant/</link>
      <pubDate>Sat, 25 Jun 2022 16:30:00 +0800</pubDate>
      
      <guid>https://LunaZhuang.github.io/blog/js-variableconstant/</guid>
      <description>為什麼程式語言都需要變數？ 變數只是個名字，只是為了要識別，讓你程式語言在計算的時候，有個放計算資料內容的容器，當你在執行的時候就可以，依照你給他的容器名稱，把他叫出來使用，變數本身沒意義。
指定又是什麼？ 在程式語言中=(x 等號)而是指定，由右側的值指定給左側的變數名稱。==則是比較兩邊的值。 但在 JavaScript 中==雖然也是比較的意思，不過 JavaScript 會有自動轉型的問題，為了不要讓你的程式碼出現奇怪的內容，建議使用更為嚴謹的===。</description>
    </item>
    
  </channel>
</rss>
