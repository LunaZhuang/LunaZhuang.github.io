[{"categories":["Ruby基本功"],"contents":"1.等號判斷 a =10 b = \u0026#34;10\u0026#34; p a == b #false p a === b #false 一個等號是指代的意思，二個等號與三個等號都是比較的意思。\n在 JS 上a == b，兩個等號會自動轉型，結果會回傳 true。\n2.如果判斷式 if time = \u0026#34;早上\u0026#34; if time == \u0026#34;早上\u0026#34; puts \u0026#34;好想賴床\u0026#34; end #條件成立的話 if 倒裝句 puts \u0026#34;好想賴床\u0026#34; if time == \u0026#34;早上\u0026#34; #與上面結果相同 unless = if not / if = unless not time = \u0026#34;晚上\u0026#34; if not time == \u0026#34;早上\u0026#34; puts \u0026#34;熬夜追劇！\u0026#34; end #與下列程式相等 unless time == \u0026#34;早上\u0026#34; puts \u0026#34;熬夜追劇！\u0026#34; end unless 倒裝句 puts \u0026#34;熬夜追劇！\u0026#34; unless time == \u0026#34;早上\u0026#34; 不要為了 unless 而 unless，先看自己看不看得懂，以自己能懂為最主要，可以寫 if not 。 if..else.. 二分法 time = \u0026#34;早上\u0026#34; if time == \u0026#34;早上\u0026#34; puts \u0026#34;好想賴床\u0026#34; else puts \u0026#34;熬夜追劇！\u0026#34; end 三元運算子 age = 19 if age \u0026gt;= 19 status = \u0026#34;已成年\u0026#34; else status = \u0026#34;未成年\u0026#34; end ##與下列程式相等 status = (age\u0026gt;=18) ? \u0026#34;已成年\u0026#34;:\u0026#34;未成年\u0026#34; 3.更多條件 if..elsif..else.. time = \u0026#34;早上\u0026#34; if time == \u0026#34;早上\u0026#34; puts \u0026#34;好想賴床\u0026#34; elsif time == \u0026#34;晚上\u0026#34; puts \u0026#34;熬夜追劇！\u0026#34; else puts \u0026#34;睡午覺\u0026#34; end case..when.. time = \u0026#34;早上\u0026#34; case time when \u0026#34;早上\u0026#34; puts \u0026#34;好想賴床\u0026#34; when \u0026#34;晚上\u0026#34; puts \u0026#34;熬夜追劇！\u0026#34; else puts \u0026#34;睡午覺\u0026#34; end ","permalink":"https://LunaZhuang.github.io/blog/ruby-logic/","tags":["Ruby"],"title":"Ruby 學習筆記-邏輯判斷"},{"categories":["Ruby基本功"],"contents":"1.字串的串接 2.字串引號種類 名稱 引號 範例 雙引號 \u0026quot; \u0026quot; puts \u0026ldquo;Hi\u0026rdquo; 單引號 \u0026rsquo; ' puts \u0026lsquo;Hi\u0026rsquo; 跳脫字元 \u0026rsquo; \\ ' puts \u0026lsquo;Hi, I'm Luna\u0026rsquo; 效果等於雙引號 %Q puts %Q(Hi) 效果等於單引號 %q puts %q(Hi) 3.數字-整數與浮點數 puts 3.55.round # 轉成整數，四捨五入 puts 3.74.floor # 轉成整數，無條件捨去 puts 3.14.ceil # 轉成整數，無條件進位 puts 3.14.to_i # 轉成整數，無條件捨去 4.除法 puts 10/3 # 整數除以整數得到3 puts 10.0/3 # 3.33333333 puts 10/3.0 # 3.33333333 puts 10.0/3.0 # 3.33333333 ","permalink":"https://LunaZhuang.github.io/blog/ruby-stringandnumber/","tags":["Ruby"],"title":"Ruby 學習筆記-字串＆數字（String\u0026Number）"},{"categories":["Ruby基本功"],"contents":"1.Ruby 變數種類 2.變數指定 a = a + 2 一個等號是指定 也可以寫成這樣 3.變數多重指定 a.可以利用 Ruby 變數多重指定特性寫成這樣 x,y,z = 1,2,3\nb.如果等號的右邊是陣列也可以自動拆解出來 x,y,z = [1,2,3]\n4.變數的命名慣例 Ruby 世界裡有不成文規定 是使用小寫英文字母以及底線來組合變數名稱，例如像是 my_shopping_cart，稱之蛇形命名法（Snake Case）。 5.常數命名 常數必須要是大寫英文字母開頭 Luna = 1 在寫程式時需要給變數一個好名字 具有清楚與有意義(給 x,y,z 不能使人清楚這段程式碼在寫什麼) 變數與常數就像標籤本身沒有型態 可以把它想像成是「一張有寫著名字的標籤，貼在某個東西上面」，被貼的那個東西有形態，但標籤本身沒有。 ","permalink":"https://LunaZhuang.github.io/blog/ruby-variable/","tags":["Ruby"],"title":"Ruby 學習筆記-變數＆常數（Variable）"},{"categories":["Ruby基本功"],"contents":"Ruby 裡的符號＝有名字的物件（值） 與數字１,2,3 一樣都是有固定的值並不能改變\n１就是１，２就是２\n符號 ：name ，就是：name 不是變數不可以改變他的值\n字串 name=\u0026quot;amber\u0026quot;，name 變數指向一個字串，並可以改變字串內容\n總結：字串與符號的差別 １．字串的內容可以變，但符號不行\n２．字串的效能稍微差一點點\n","permalink":"https://LunaZhuang.github.io/blog/ruby-symbol/","tags":["Ruby"],"title":"Ruby 學習筆記-符號（Symbol）"}]